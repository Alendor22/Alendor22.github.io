---
layout: post
title:      "Procedural Ruby -- How a novice should approach learning this."
date:       2020-01-12 00:25:46 +0000
permalink:  procedural_ruby_--_how_a_novice_should_approach_learning_this
---


     When I began the pre-bootcamp prep for Flatiron school I knew nothing about coding. In the course of a couple of months I began to enjoy the time I spent coding.  The challenges, the thinking outside the box of it all was dare I say fun, solving problems is the best food for the brain in my opinion.  When I was accepted to begin my coding journey at Flatiron school I was so excited, and I still am, but I had to do pre-work.  There was something like 135 lessons\labs to do by a certain time, the amount of time varied from person to person I later found out.  When I actually was in the program there was a section of lessons\labs called procedural ruby. Which brings me to our topic, how a novice should approach procedural ruby.  To answer that question you have to ask what is procedural ruby?  To best explain it I would define it as a set of routines, or steps to be carried out in a curtain order.  It could also be described as any given procedure that might be called at any point during a program's execution, including by other procedures or itself.  Procedural ruby directly instructs in a top down fashion the data and the procedure operating on that data are separate entities.  As a novice learning anything new, you should always think of yourself as a beginner.  Procedural ruby is a set of instructions on how to manipulate data in ruby except you are not working in irb.  A novice should approach procedural ruby as you would when you learned algebra, it’s the basics, but you still need to know arithmetic, it’s as simple as that.  You’ll learn about the building blocks that ruby has to offer first.  Topics such as variables, methods, booleans, logic, conditionals, loops, arrays, iteration, hashes, and data structures.  Some topics seem difficult at first, but difficulty can be broken down to the amount of patients you put in to a task, the more patients the less it will seem difficult.  So with that being said one should approach procedural ruby like you approach anything new to you that you’re learning, with an open mind and patients.
